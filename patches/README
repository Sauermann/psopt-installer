The patches in this directory are part of psopt-installer.

Psopt Installer is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

Psopt Installer is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with Psopt Installer.  If not, see <http://www.gnu.org/licenses/>.

psopt-gnuplot-windows.patch
===========================

This patch is intended for the Windows version and applies the
following changes to the sourcecode of PSOPT 3.02

- Adjust the Gnuplot-parameters to support newer versions of Gnuplot
  than 4.2.6 [1]
- Remove the '-persist' option to the Gnuplot call. The effect is that
  now Gnuplot windows do not stay open

To enable simultaneous display of the plots, I recommed to save all
plots to files and insert a line

   system("explorer.exe $FILENAME_OF_OUTPUTFILE");

after every plot statemet. (replace $FILENAME_OF_OUTPUTFILE by the
actual filename) - after the installation, the file
$INSTALL_DIR/obstacle/obstacle.cxx contains an example of this usage.

[1] https://groups.google.com/forum/?_escaped_fragment_=topic/psopt-users-group/voh77wB2KCs#!topic/psopt-users-group/voh77wB2KCs

psopt-c++0x-windows.patch
=========================

This patch enables Psopt and it's examples to be built with compiler
option -std=c++0x that provides some new c++11 functionality.

psopt-lambdafunction-windows.patch
==================================

This patch replaces in the struct prob_str the function references by
std::function. The intention is to be able to store lambda functions
in them.

psopt-bugfix-static-variable.patch
==================================

Bugfix for Psopt that corrects in psopt_main the variable aux_local to
static. [2]

[2] http://stackoverflow.com/questions/11137516/scope-vs-lifetime-of-variable

psopt-ipopt-compatibility.patch
===============================

Allow Psopt to be compiled with Ipopt 3.11.7 - 3.12.1: Include the
cassert standard header

scotch-mingw-64.patch
=====================

Allow compilation of Scotch in Mingw-64.
Add a dummy function 'pipe' and make changes to Makefile.inc

psopt-gcc-5.patch
=================

Make Psopt compilable under gcc v5.1.
Make some function parameters string constants.

Note to self
============
diff -ru Psopt3/PSOPT/src Psopt3-new/PSOPT/src > diff.txt
